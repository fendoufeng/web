<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.web.mapper.UserMapper">

    <!-- POJO与数据库表对应-->
    <resultMap id="UserResult" type="com.example.web.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
    </resultMap>

    <!-- 查询所有用户信息-->
    <select id="findAll"  resultMap="UserResult">
        SELECT * FROM user
    </select>

    <!-- 通过id到对应的用户信息 -->
    <select id="getUserById"  resultMap="UserResult">
        SELECT * FROM user where id = #{id}
    </select>

    <!-- 通过username到对应的用户信息 -->
    <select id="getUserByUsername"  resultMap="UserResult">
        SELECT * FROM user where username = #{username}
    </select>

    <!-- 添加用户信息 -->
    <insert id="addUser" parameterType="com.example.web.entity.User" keyProperty="id">
        insert  into user (username,password,phonenumber,nickname,email,brithday,user_status,create_time)
         values (#{username},#{password},#{phonenumber},#{nickname},#{email},#{brithday},#{user_status},#{create_time});
    </insert>
    
    <!--修改用户信息-->
    <update id="editUser" parameterType="com.example.web.entity.User" >
        update user set username = #{username} ,password = #{password},
        phonenumber = #{phonenumber},nickname = #{nickname},email = #{email},
        brithday = #{brithday},user_status = #{user_status},update_time = #{update_time},
        last_log_time = #{last_log_time} where id = #{id}
    </update>
    
    <!--删除用户信息-->
    <delete id="deleteUser" parameterType="com.example.web.entity.User">
        delete from user where id = #{id}
    </delete>
    

</mapper>